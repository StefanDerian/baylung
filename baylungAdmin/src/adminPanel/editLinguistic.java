/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminPanel;

import Object.Linguistic;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Benny
 */
public class editLinguistic extends javax.swing.JPanel {

    /**
     * Creates new form editLinguistic
     */
    DefaultTableModel model;
    private static Connection koneksi;
    ArrayList<Linguistic> linguisticList = new ArrayList<Linguistic>();
    public editLinguistic() throws ClassNotFoundException, SQLException {
        initComponents();
         //data has type Object[]
        String[] columnNames = {"name", "type", "explaination"};
        model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        linguisticTable.setModel(model);
        
        Class.forName("com.mysql.jdbc.Driver");
        koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/baylung","root","");
        
       if(koneksi == null){
            System.out.print("not konek");
        }else{
             System.out.print("konek");
        }
         Statement state = koneksi.createStatement();
         ResultSet linguisticResult = state.executeQuery("SELECT * FROM linguistic_variable ORDER BY id_linguistic ASC");
         while(linguisticResult.next()){
             model.addRow(new Object[]{linguisticResult.getString("linguistic_name"),linguisticResult.getString("type"),linguisticResult.getString("explaination")});
             this.linguisticList.add(new Linguistic(linguisticResult.getString("id_linguistic"),linguisticResult.getString("linguistic_name"),linguisticResult.getString("type"),linguisticResult.getString("explaination")));
         }
         
         
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        linguisticTypeAdd = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        linguisticNameAdd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        linguisticExplainationAdd = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        addLinguisticButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        linguisticTypeEdit = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        linguisticExplainationEdit = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        editLinguisticButton = new javax.swing.JButton();
        linguisticNameEdit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        linguisticTable = new javax.swing.JTable();
        deleteLinguistic = new javax.swing.JButton();

        jButton1.setText("jButton1");

        linguisticTypeAdd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "diagnostic", "disease", " " }));

        jLabel1.setText("Add Linguistic Variable");

        linguisticNameAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linguisticNameAddActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("Explaination");

        linguisticExplainationAdd.setColumns(20);
        linguisticExplainationAdd.setLineWrap(true);
        linguisticExplainationAdd.setRows(5);
        jScrollPane1.setViewportView(linguisticExplainationAdd);

        jLabel4.setText("type");

        addLinguisticButton.setText("Add");
        addLinguisticButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLinguisticButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel5.setText("Edit Linguistic Variable");

        linguisticTypeEdit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "diagnostic", "disease", " " }));

        linguisticExplainationEdit.setColumns(20);
        linguisticExplainationEdit.setLineWrap(true);
        linguisticExplainationEdit.setRows(5);
        jScrollPane2.setViewportView(linguisticExplainationEdit);

        jLabel6.setText("type");

        editLinguisticButton.setText("Edit");
        editLinguisticButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLinguisticButtonActionPerformed(evt);
            }
        });

        linguisticNameEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linguisticNameEditActionPerformed(evt);
            }
        });

        jLabel7.setText("Name");

        jLabel8.setText("Explaination");

        linguisticTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Type", "Explaination"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        linguisticTable.setColumnSelectionAllowed(true);
        linguisticTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        linguisticTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linguisticTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(linguisticTable);
        linguisticTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        deleteLinguistic.setText("Delete");
        deleteLinguistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLinguisticActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(51, 51, 51)
                                    .addComponent(linguisticNameAdd))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(linguisticTypeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel1)
                            .addComponent(addLinguisticButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(155, 155, 155)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(51, 51, 51)
                                    .addComponent(linguisticNameEdit))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(linguisticTypeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(editLinguisticButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(deleteLinguistic)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteLinguistic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(linguisticNameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(linguisticTypeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(addLinguisticButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(linguisticNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(linguisticTypeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(editLinguisticButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void linguisticNameAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linguisticNameAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linguisticNameAddActionPerformed

    private void linguisticNameEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linguisticNameEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linguisticNameEditActionPerformed

    private void addLinguisticButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLinguisticButtonActionPerformed
        // TODO add your handling code here:
        Statement state = null;
        String name = linguisticNameAdd.getText();
        String explaination = linguisticExplainationAdd.getText();
        String type = linguisticTypeAdd.getSelectedItem().toString();
        try {
            state = koneksi.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(editLinguistic.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            int insertedLinguistic2 = state.executeUpdate("INSERT INTO linguistic_variable (linguistic_name, type,explaination) "
                    + " VALUES('"+name+"','"+type+"','"+explaination+"')",state.RETURN_GENERATED_KEYS);
            ResultSet insertedLinguistic = state.getGeneratedKeys();
            if (insertedLinguistic.next()){
                linguisticList.add(new Linguistic(insertedLinguistic.getString(1),name,type,explaination));
                System.out.print(insertedLinguistic.getString(1));
            }
            state.close();
            insertedLinguistic.close();
            
            
            model.insertRow(linguisticTable.getRowCount(), new Object[]{name,type,explaination});
            
        } catch (SQLException ex) {
            Logger.getLogger(editLinguistic.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
    }//GEN-LAST:event_addLinguisticButtonActionPerformed
 private void alert(){
     JOptionPane.showMessageDialog(null, "Please Select a Row");
 }
    private void linguisticTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linguisticTableMouseClicked
        // TODO add your handling code here:
        System.out.println(linguisticTable.getSelectedRow());
        if(linguisticTable.getSelectedRow()<0){
            alert();
        }else{
             int rowIndex = linguisticTable.getSelectedRow();
            linguisticNameEdit.setText(linguisticList.get(rowIndex).name);
            linguisticExplainationEdit.setText(linguisticList.get(rowIndex).explaination);
            linguisticTypeEdit.setSelectedItem(linguisticList.get(rowIndex).type);
        }
       
        
        
    }//GEN-LAST:event_linguisticTableMouseClicked

    private void editLinguisticButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editLinguisticButtonActionPerformed
        // TODO add your handling code here:
         Statement state = null;
        
        if(linguisticTable.getSelectedRow()<0){
            alert();
        }else{
            String name = linguisticNameEdit.getText();
            String explaination = linguisticExplainationEdit.getText();
            String type = linguisticTypeEdit.getSelectedItem().toString();
        
            try {
            state = koneksi.createStatement();
            } catch (SQLException ex) {
            Logger.getLogger(editLinguistic.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
            int insertedLinguistic2 = state.executeUpdate("UPDATE linguistic_variable SET "
                    + "linguistic_name = '"+name+"',type ='"+type+"',explaination = '"+explaination
                    + "' WHERE id_linguistic ='"+linguisticList.get(linguisticTable.getSelectedRow()).id+"'"
                    ,state.RETURN_GENERATED_KEYS);
            ResultSet insertedLinguistic = state.getGeneratedKeys();
            
            linguisticList.get(linguisticTable.getSelectedRow()).setUpdate(name, type, explaination);                
            model.setValueAt(name,linguisticTable.getSelectedRow() , 0);
            model.setValueAt(type,linguisticTable.getSelectedRow() , 1);
            model.setValueAt(explaination,linguisticTable.getSelectedRow() ,2);
            state.close();
            insertedLinguistic.close();
            
            
            
            
            } catch (SQLException ex) {
            Logger.getLogger(editLinguistic.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_editLinguisticButtonActionPerformed

    private void deleteLinguisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLinguisticActionPerformed
        // TODO add your handling code here:
        int selectedRow = linguisticTable.getSelectedRow();
        Statement state = null;
        if(selectedRow < 0 || Integer.parseInt(linguisticList.get(linguisticTable.getSelectedRow()).id)< 56 ){
            alert();
        }else{
            try {
            state = koneksi.createStatement();
            } catch (SQLException ex) {
            Logger.getLogger(editLinguistic.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
            int insertedLinguistic2 = state.executeUpdate("DELETE FROM linguistic_variable WHERE id_linguistic = "+linguisticList.get(linguisticTable.getSelectedRow()).id);      
            model.removeRow(selectedRow);
            linguisticList.remove(selectedRow);
            state.close();
            
            
            
            
            
            } catch (SQLException ex) {
            Logger.getLogger(editLinguistic.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_deleteLinguisticActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLinguisticButton;
    private javax.swing.JButton deleteLinguistic;
    private javax.swing.JButton editLinguisticButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea linguisticExplainationAdd;
    private javax.swing.JTextArea linguisticExplainationEdit;
    private javax.swing.JTextField linguisticNameAdd;
    private javax.swing.JTextField linguisticNameEdit;
    private javax.swing.JTable linguisticTable;
    private javax.swing.JComboBox linguisticTypeAdd;
    private javax.swing.JComboBox linguisticTypeEdit;
    // End of variables declaration//GEN-END:variables
}
